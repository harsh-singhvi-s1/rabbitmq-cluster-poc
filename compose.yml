version: "3.7"

services:
    rabbitmq1:
        image: rabbitmq:3.8-management
        hostname: rabbitmq1
        environment:
            - RABBITMQ_CONFIG_FILE=/config/rabbitmq
            - RABBITMQ_ERLANG_COOKIE=WIWVHCDTCIUAWANLMQAW
        ports:
            # - "15672:15672"
            - "5672:5672"
        networks:
            - rabbitmq_cluster
        volumes:
            - rabbitmq1_data:/var/lib/rabbitmq
            - ./enabled_plugins:/etc/rabbitmq/enabled_plugins
            - ./rabbitmq.conf:/config/rabbitmq.conf
            - ./definitions.json:/etc/rabbitmq/definitions.json

    rabbitmq2:
        image: rabbitmq:3.8-management
        hostname: rabbitmq2
        environment:
            - RABBITMQ_CONFIG_FILE=/config/rabbitmq
            - RABBITMQ_ERLANG_COOKIE=WIWVHCDTCIUAWANLMQAW
        ports:
            # - "15673:15672"
            - "5673:5672"
        networks:
            - rabbitmq_cluster
        volumes:
            - rabbitmq2_data:/var/lib/rabbitmq
            - ./enabled_plugins:/etc/rabbitmq/enabled_plugins
            - ./rabbitmq.conf:/config/rabbitmq.conf
            - ./definitions.json:/etc/rabbitmq/definitions.json
        depends_on:
            - rabbitmq1

    rabbitmq3:
        image: rabbitmq:3.8-management
        hostname: rabbitmq3
        environment:
            - RABBITMQ_CONFIG_FILE=/config/rabbitmq
            - RABBITMQ_ERLANG_COOKIE=WIWVHCDTCIUAWANLMQAW
        ports:
            # - "15674:15672"
            - "5674:5672"
        networks:
            - rabbitmq_cluster
        volumes:
            - rabbitmq3_data:/var/lib/rabbitmq
            - ./enabled_plugins:/etc/rabbitmq/enabled_plugins #instead of this hack we can create out own dockerimage with enabled plugins
            - ./rabbitmq.conf:/config/rabbitmq.conf
            - ./definitions.json:/etc/rabbitmq/definitions.json # policy creation

        depends_on:
            - rabbitmq1

    # this service gives a linux env on browser, can access browser in the linux env to access management consoles in the docker compose network
    webtop:
        image: lscr.io/linuxserver/webtop:latest
        container_name: webtop
        # security_opt:
        #   - seccomp:unconfined #optional
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=Etc/UTC
            - SUBFOLDER=/ #optional
            - TITLE=Webtop #optional
        # volumes:
        # - /path/to/data:/config
        # - /var/run/docker.sock:/var/run/docker.sock #optional
        ports:
            - 3000:3000
            - 3001:3001
        # devices:
        # - /dev/dri:/dev/dri #optional
        shm_size: "1gb" #optional
        restart: unless-stopped
        networks:
            - rabbitmq_cluster
    
    # to access rmqs nodes within the network
    client:
      image: golang:alpine
      command: tail -F anything # run container forever
      networks:
        - rabbitmq_cluster
      volumes:
        - ./:/app

networks:
    rabbitmq_cluster:
        driver: bridge

volumes:
    rabbitmq1_data:
    rabbitmq2_data:
    rabbitmq3_data:
